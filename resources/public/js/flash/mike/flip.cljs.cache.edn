;; Analyzed by ClojureScript 0.0-3308
{:use-macros {go cljs.core.async.macros}, :excludes #{}, :name mike.flip, :imports nil, :requires {reagent reagent.core, reagent.core reagent.core, http cljs-http.client, cljs-http.client cljs-http.client, cljs.core.async cljs.core.async}, :uses {<! cljs.core.async}, :defs {fetch-sentence {:protocol-inline nil, :meta {:file "/home/mike/sandbox/mike/src/cljs/mike/flip.cljs", :line 42, :column 7, :end-line 42, :end-column 21, :arglists (quote ([]))}, :name mike.flip/fetch-sentence, :variadic false, :file "src/cljs/mike/flip.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, path {:name mike.flip/path, :file "src/cljs/mike/flip.cljs", :line 11, :column 1, :end-line 11, :end-column 10, :meta {:file "/home/mike/sandbox/mike/src/cljs/mike/flip.cljs", :line 11, :column 6, :end-line 11, :end-column 10}}, swap-selection {:protocol-inline nil, :meta {:file "/home/mike/sandbox/mike/src/cljs/mike/flip.cljs", :line 59, :column 7, :end-line 59, :end-column 21, :arglists (quote ([selection]))}, :name mike.flip/swap-selection, :variadic false, :file "src/cljs/mike/flip.cljs", :end-column 21, :method-params ([selection]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 1, :fn-var true, :arglists (quote ([selection]))}, new-sentence {:protocol-inline nil, :meta {:file "/home/mike/sandbox/mike/src/cljs/mike/flip.cljs", :line 36, :column 7, :end-line 36, :end-column 19, :arglists (quote ([sentence state]))}, :name mike.flip/new-sentence, :variadic false, :file "src/cljs/mike/flip.cljs", :end-column 19, :method-params ([sentence state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 2, :fn-var true, :arglists (quote ([sentence state]))}, start {:protocol-inline nil, :meta {:file "/home/mike/sandbox/mike/src/cljs/mike/flip.cljs", :line 85, :column 7, :end-line 85, :end-column 12, :arglists (quote ([]))}, :name mike.flip/start, :variadic false, :file "src/cljs/mike/flip.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 85, :end-line 85, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, state {:name mike.flip/state, :file "src/cljs/mike/flip.cljs", :line 31, :column 1, :end-line 31, :end-column 11, :meta {:file "/home/mike/sandbox/mike/src/cljs/mike/flip.cljs", :line 31, :column 6, :end-line 31, :end-column 11}}, sentence-atom {:name mike.flip/sentence-atom, :file "src/cljs/mike/flip.cljs", :line 28, :column 1, :end-line 28, :end-column 19, :meta {:file "/home/mike/sandbox/mike/src/cljs/mike/flip.cljs", :line 28, :column 6, :end-line 28, :end-column 19}}, thing {:protocol-inline nil, :meta {:file "/home/mike/sandbox/mike/src/cljs/mike/flip.cljs", :line 49, :column 7, :end-line 49, :end-column 12, :arglists (quote ([sentence]))}, :name mike.flip/thing, :variadic false, :file "src/cljs/mike/flip.cljs", :end-column 12, :method-params ([sentence]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 1, :fn-var true, :arglists (quote ([sentence]))}, start-atom {:name mike.flip/start-atom, :file "src/cljs/mike/flip.cljs", :line 29, :column 1, :end-line 29, :end-column 16, :meta {:file "/home/mike/sandbox/mike/src/cljs/mike/flip.cljs", :line 29, :column 6, :end-line 29, :end-column 16}}, app {:protocol-inline nil, :meta {:file "/home/mike/sandbox/mike/src/cljs/mike/flip.cljs", :line 65, :column 7, :end-line 65, :end-column 10, :arglists (quote ([]))}, :name mike.flip/app, :variadic false, :file "src/cljs/mike/flip.cljs", :end-column 10, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 65, :end-line 65, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, selection-atom {:name mike.flip/selection-atom, :file "src/cljs/mike/flip.cljs", :line 27, :column 1, :end-line 27, :end-column 20, :meta {:file "/home/mike/sandbox/mike/src/cljs/mike/flip.cljs", :line 27, :column 6, :end-line 27, :end-column 20}}}, :require-macros {cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:seen #{:div.large-12.columns.centered-text :selected :else :sentence :value :start :recur :type :on-click :section#thing :italian :div :section.snake :loading :div.row :id :english :query-params :div.small-8.columns :input :h1 :body :p}, :order [:italian :english :start :selected :loading :sentence :id :query-params :body :recur :else :section.snake :div.row :div.small-8.columns :input :type :value :on-click :p :div :section#thing :div.large-12.columns.centered-text :h1]}, :doc nil}